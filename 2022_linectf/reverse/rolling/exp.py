import angr
import logging
logging.getLogger('angr').setLevel('CRITICAL')
p = angr.Project("./libnative-lib2.so")

compare_table = [0x7, 0x18, 0x10, 0xf, 0x1c, 0x12, 0x5, 0xa, 0x7, 0xb, 0x2, 0xf, 0x12, 0x6, 0x8, 0x13, 0xa, 0x7, 0x5, 0x9, 0xb, 0x6, 0xf, 0xf, 0x11, 0x4, 0x13, 0x13, 0x1, 0xe, 0x3, 0xb, 0x0, 0x1, 0x1, 0x9, 0x9, 0x2, 0x8, 0x13, 0x1, 0xe, 0x1, 0x1, 0xc, 0x9, 0x5, 0x10, 0x1, 0x12, 0xa, 0x8, 0xb, 0x12, 0x11, 0x4, 0x13, 0x1, 0x1, 0xc, 0x13, 0x1, 0xe, 0x12, 0x0, 0xe, 0x8, 0xb, 0x12, 0x1, 0xf, 0xb, 0x3, 0xb, 0x0, 0x1, 0x1, 0xc, 0x7, 0x5, 0x4, 0x8, 0xb, 0x12, 0x8, 0x18, 0xf, 0x8, 0x18, 0xf, 0xe, 0x1c, 0xf, 0x1, 0x12, 0xa, 0x10, 0x15, 0x11, 0x1, 0x1, 0xc, 0x6, 0x16, 0xa, 0x8, 0xb, 0x12, 0x11, 0x4, 0x13, 0x1, 0x12, 0xa, 0x1, 0x1, 0xc, 0xe, 0x1c, 0xf, 0x1, 0x12, 0xa, 0x1, 0x1, 0xc, 0x3, 0xb, 0x0, 0x9, 0x2, 0x8, 0x4, 0xd, 0x10, 0x1, 0x1, 0xc, 0x6, 0x16, 0xa, 0x4, 0xd, 0x10, 0x4, 0xd, 0x10, 0x11, 0xf, 0x5, 0x7, 0x17, 0x2]
char_table = {}
def test(guess):
    state = p.factory.blank_state(addr=0x4039c0)
    state.regs.sp = 0x7f00000000
    state.regs.x29 = 0x7f000000f0
    state.memory.store(0x7f00000094, state.solver.BVV(guess<<8,16))
    sm = p.factory.simulation_manager(state)
    sm.explore(find=0x4039e0)
    char_table[guess]=[sm.found[0].mem[0xc0000000].byte.concrete,sm.found[0].mem[0xc0000010].byte.concrete,sm.found[0].mem[0xc0000020].byte.concrete]

# about 23 minutes
for j in range(32,127):
    test(j)
flag=''
for i in range(51):
    for j in range(32,127):
        if char_table[j]==compare_table[i*3:i*3+3]:
            flag+=chr(j)
print(flag)
